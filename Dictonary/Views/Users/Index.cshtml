
@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}
<h5 class="pgtitle"><i class="fas fa-user menu-mr"></i> User Managment</h5>
<div ng-app="newsportalApp" class="row bg-smoke page-padding">
    <div ng-controller="UsersArchiveCtrl" class="col-lg-12 col-12 col-md-12">
        <div class="card mt-2">
            <div class="card-header bg-header-1">
                <h5 class="ch"><i class="fas fa-users"></i> User Management</h5>
                <p>Create, Delete, Update, View, Block, Unblock, Reset Password for a user can be done here</p>
            </div>
            <div class="card-body">
                <div class="row">
                    <div class="col-lg-2">
                        <div class="form-group">
                            <label>Name</label>
                            <input id="txtFullName" type="text" ng-model="FullName" class="form-control nw-text form-control-sm" placeholder="FullName" />
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <div class="form-group">
                            <label>User Name</label>
                            <input id="txtUname" type="text" ng-model="Uname" class="form-control nw-text form-control-sm" placeholder="Username" />
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <div class="form-group">
                            <label>Mobile No</label>
                            <input id="txtMobile" type="text" ng-model="Mobile" class="form-control nw-text form-control-sm" placeholder="Mobile" />
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <div class="form-group">
                            <label>Email</label>
                            <input id="txtEmail" type="email" ng-model="Email" class="form-control nw-text form-control-sm" placeholder="Email" />
                        </div>
                    </div>
                    <div class="col-lg-2">
                        <div class="form-group">
                            <label>Role</label>
                            <select id="ddlRole" ng-model="selectedRole" class="form-control nw-text form-control-sm" ng-init="selectedRole='0'">
                                <option value="0">{{DefaultLabel}}</option>
                                <option value="{{val.RoleId}}" ng-repeat="val in RoleData">{{val.RoleName}}</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-12">
                        <div class="form-group">
                            <button id="btnSubmit" type="button" ng-click="Add()" class="btn btn-bg-11 text-light np-btn btn-pad">Create</button>
                            <button id="btnReset" type="button" ng-click="FieldReset()" class="btn btn-pink text-light np-btn btn-pad">Reset</button>
                        </div>
                    </div>
                </div>
                <div class="row" ng-hide="isSearching">
                    <div class="col-lg-12">
                        <div class="table-responsive-sm">
                            <table class="table">
                                <thead>
                                    <tr>
                                        <th>ID</th>
                                        <th>Full Name</th>
                                        <th>UserName</th>
                                        <th>Email</th>
                                        <th>Mobile</th>
                                        <th>Role</th>
                                        <th>Action</th>
                                        <th>Reset Password</th>
                                        <th>Block User</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr ng-repeat="item in Data" data-id="{{item.UserId}}">
                                        <td>{{$index+1}}</td>
                                        <td>
                                            <span ng-hide="item.EditMode">{{item.FullName}}</span>
                                            <input type="text" ng-model="item.FullName" ng-show="item.EditMode" class="form-control nw-text form-control-sm" />
                                        </td>
                                        <td>
                                            <span>{{item.UserName}}</span>
                                        </td>
                                        <td>
                                            <span ng-hide="item.EditMode">{{item.Email}}</span>
                                            <input type="text" ng-model="item.Email" ng-show="item.EditMode" class="form-control nw-text form-control-sm" />
                                        </td>
                                        <td>
                                            <span ng-hide="item.EditMode">{{item.Phone}}</span>
                                            <input type="text" ng-model="item.Phone" ng-show="item.EditMode" class="form-control nw-text form-control-sm" />
                                        </td>
                                        <td>
                                            <span ng-hide="item.EditMode&&item.RoleId!=1">{{roleFilter(item.RoleId)}}</span>
                                            <select ng-model="item.RoleId" ng-show="item.EditMode&&item.RoleId!=1" class="form-control nw-text form-control-sm">
                                                <option value="0">{{DefaultLabel}}</option>
                                                <option ng-model="item.RoleId" value="{{items.RoleId}}" ng-selected="items.RoleId==selectRole" ng-repeat="items in RoleData">{{items.RoleName}}</option>
                                            </select>
                                        </td>

                                        <td>
                                            <a class="Edit btn btn-bg-11 text-light np-btn btn-pad" href="javascript:;" ng-hide="item.EditMode" ng-click="Edit($index)">Edit</a>
                                            <a class="Update btn btn-bg-11 text-light np-btn btn-pad" href="javascript:;" ng-show="item.EditMode" ng-click="Update($index)">Update</a>
                                            <a class="Cancel btn btn-pink text-light np-btn btn-pad" href="javascript:;" ng-show="item.EditMode" ng-click="Cancel($index)">Cancel</a>
                                            <a href="javascript:;" class="btn btn btn-pink text-light np-btn btn-pad" ng-hide="item.EditMode" ng-click="Delete(item.UserId)">Delete</a>
                                        </td>
                                        <td>
                                            <a class="Reset btn btn-bg-12 text-light np-btn btn-pad" href="javascript:;" ng-click="Reset(item.UserId)">Reset</a>
                                        </td>
                                        <td>
                                            <a class="Block btn btn-bg-13 text-light np-btn btn-pad" href="javascript:;" ng-click="Block(item.UserId,items.IsBlocked)">{{items.IsBlocked==true?'Blocked':'Unblock'}}</a>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                        <div class="text-center">
                            <newsportal-pager page="{{page}}" pages-count="{{pagesCount}}" total-count="{{totalCount}}" search-func="search(page)"></newsportal-pager>
                        </div>
                    </div>
                </div>
                <div ng-hide="!isSearching">
                    <div class="progress progress-striped active">
                        <div class="progress-bar" role="progressbar" aria-valuenow="45" aria-valuemin="0" aria-valuemax="100" style="width: 100%">
                            <span class="sr-only">Loading...</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts
{
<script>
    var newsportalApp = angular.module('newsportalApp', ['ngResource']);
    /*************************************************************************/
    newsportalApp.factory('Users', ['$resource', function ($resource) {
        return $resource('', {}, {
            query: {
                method: 'GET',
                url: '/Users/GetUser',
                params: { format: 'json' },
                isArray: false

            },
            save: {
                method: 'Post',
                url: '/Users/InsertUser',
                params: { format: 'json' },
                isArray: false
            },
            update:
            {
                method: 'Post',
                url: '/Users/UpdateUser',
                params: { format: 'json' },
                isArray: false
            },
            delete:
            {
                method: 'Post',
                url: '/Users/DeleteUser',
                params: { format: 'json' },
                isArray: false
            },
            getRoles:{
                method: 'GET',
                url: '/Roles/GetRoles',
                params: { format: 'json' },
                isArray: true
            },
            reset: {
                method: 'Post',
                url: '/Users/UserReset',
                params: { format: 'json' },
                isArray: true
            },
            block: {
                method: 'Post',
                url: '/Users/UserBlock',
                params: { format: 'json' },
                isArray: true
            }
        });
    }]);

    // CONTROLLERS
    newsportalApp.controller('UsersArchiveCtrl', ['$scope', '$window', 'Users',
        function ($scope, $window, Users) {
            $scope.RoleItems = {};
            $scope.isSearching = false;
            $scope.page = 0;
            $scope.pagesCount = 0;

            $scope.search = function (page) {
                loaderShow();
                page = page || 0;
                $scope.isSearching = true;
                Users.query({ page: page, pageSize: 8 }).$promise.then(function (data) {
                    $scope.page = data.Page;
                    $scope.pagesCount = data.TotalPages;
                    $scope.totalCount = data.TotalCount;
                    $scope.Data = data.Items;
                    $scope.isSearching = false;
                    loaderHide();
                }, function (error) {
                    $scope.isSearching = false;

                });
                $scope.isSearching = true;
            };
            $scope.getRoles = function () {
                Users.getRoles().$promise.then(function (data) {
                    $scope.DefaultLabel = "Please Select";
                    $scope.RoleData = data;
                    $scope.RoleItems.Items = data;
                }, function (error) {
                });
            };
            $scope.Add = function () {
                var obj = {};
                if ($scope.FullName == "" || $scope.FullName == undefined) {
                    $('#btnSubmit').blur();
                    alertify.alert('Full Name', 'Please Enter Full Name !', function () { document.querySelector("#txtFullName").focus(); });
                    return;
                }
                if ($scope.Uname == "" || $scope.Uname == undefined) {
                    $('#btnSubmit').blur();
                    alertify.alert('Username', 'Please Enter UserName !', function () { document.querySelector("#txtUname").focus(); });
                    return;
                }
                if ($scope.Mobile == "" || $scope.Mobile == undefined) {
                    $('#btnSubmit').blur();
                    alertify.alert('Mobile', 'Please Enter Mobile !', function () { document.querySelector("#txtMobile").focus(); });
                    return;
                }
                if ($scope.Email == "" || $scope.Email == undefined) {
                    $('#btnSubmit').blur();
                    alertify.alert('Email', 'Please Enter Email !', function () { document.querySelector("#txtEmail").focus(); });
                    return;
                }
                if ($scope.selectedRole == 0) {
                    $('#btnSubmit').blur();
                    alertify.alert('Role', 'Please Select a Role !', function () { document.querySelector("#ddlRole").focus(); });
                    return;
                }
                obj.UserName = $scope.Uname;
                obj.FullName = $scope.FullName;
                obj.Email = $scope.Email;
                obj.Phone = $scope.Mobile;
                obj.RoleId = $scope.selectedRole
                Users.save(JSON.stringify(obj)).$promise.then(function (data) {
                    if (data.usernm != undefined) {
                        alertify.alert('User Name', data.usernm + ' !', function () { document.querySelector("#txtUname").focus(); });
                        return
                    }
                    if (data.emailId != undefined) {
                        alertify.alert('Email', data.emailId + ' !', function () { document.querySelector("#txtEmail").focus(); });
                        return
                    }
                    if (data.mobileNo != undefined) {
                        alertify.alert('Mobile No', data.mobileNo + ' !', function () { document.querySelector("#txtMobile").focus(); });
                        return
                    }
                    $scope.FieldReset()
                    $scope.search();
                });
            };
            $scope.search();
            $scope.getRoles();

            $scope.EditItem = {};
            $scope.Edit = function (index) {
                $scope.Data[index].EditMode = true;
                $scope.EditItem.FullName = $scope.Data[index].FullName;
                $scope.EditItem.Mobile = $scope.Data[index].Mobile;
                $scope.EditItem.Email = $scope.Data[index].Email;
                $scope.EditItem.RoleId = $scope.Data[index].RoleId;
                $scope.selectRole = $scope.Data[index].RoleId;
            };
            $scope.Cancel = function (index) {
                $scope.Data[index].FullName = $scope.EditItem.FullName;
                $scope.Data[index].Mobile = $scope.EditItem.Mobile;
                $scope.Data[index].Email = $scope.EditItem.Email;
                $scope.Data[index].RoleId = $scope.EditItem.RoleId;
                $scope.Data[index].EditMode = false;
                $scope.EditItem = {};
            };
            $scope.Reset = function (userId) {
                if ($window.confirm("Do you want to reset this user?")) {
                    loaderShow();
                    var obj = {};
                    obj.Id = userId;
                    Users.reset(JSON.stringify(obj)).$promise.then(function (data) {
                        $scope.search();
                    });
                }
            };
            $scope.Block = function (userId, status) {
                if ($window.confirm("Do you want to Blcok or Unblock this user?")) {
                    var obj = {};
                    obj.Id = userId;
                    obj.status = status;
                    loaderShow();
                    Users.block(JSON.stringify(obj)).$promise.then(function (data) {
                        $scope.search();
                    });
                }
            };
            $scope.Update = function (index) {
                var user = $scope.Data[index];
                var _user = {};
                if (user.FullName == "") {
                    alertify.alert('Username', 'Please Enter UserName !');
                    return;
                }
                if (user.Mobile == "") {
                    alertify.alert('Mobile No', 'Please Enter Mobile No !');
                    return;
                }
                if (user.Email == "") {
                    alertify.alert('Email', 'Please Enter Email !');
                    return;
                }
                if (user.RoleId == 0) {
                    alertify.alert('Role', 'Please Select a Role !');
                    return;
                }
                loaderShow();
                _user.FullName = user.FullName;
                _user.Email = user.Email;
                _user.Phone = user.Phone;
                _user.RoleId = user.RoleId
                _user.UserId = user.UserId;
                Users.update(JSON.stringify(_user)).$promise.then(function (data) {
                    if (data.usernm != undefined) {
                        alertify.alert('User Name', data.usernm + ' !');
                        loaderHide();
                        return
                    }
                    user.EditMode = false;
                    $scope.search();
                });

            };
            //Deleting an existing record from database.
            $scope.Delete = function (userId) {
                if ($window.confirm("Do you want to delete this row?")) {
                    loaderShow();
                    var obj = {};
                    obj.Id = userId;
                    Users.delete(JSON.stringify(obj)).$promise.then(function (data) {
                        $scope.Data = $scope.Data.filter(function (_user) {
                            return _user.RoleId !== userId;
                        })
                        $scope.search();
                    });
                }
            };
            $scope.FieldReset = function () {
                $('#txtFullName').val('');
                $('#txtUname').val('');
                $('#txtMobile').val('');
                $('#txtEmail').val('');
                $('#ddlRole').val(0);
            }
            $scope.roleFilter = function (RoleId) {
                if ($scope.RoleItems.Items != undefined) {
                    var flterdata = $scope.RoleItems.Items.filter(function (item) {
                        return item.RoleId == RoleId;
                    });
                    if (flterdata[0] != undefined) {
                        return flterdata[0].RoleName;
                    }
                    else {
                        return '';
                    }
                }

            };
        }]
    );
    // DIRECTIVES
    newsportalApp.directive('newsportalPager', function () {
        return {
            scope: {
                page: '@@',
                pagesCount: '@@',
                totalCount: '@@',
                searchFunc: '&'
            },
            replace: true,
            restrict: 'E',
            templateUrl: '../Scripts/templates/pager-template.html',
            controller: ['$scope', function ($scope) {
                $scope.search = function (i) {
                    if ($scope.searchFunc) {
                        $scope.searchFunc({ page: i });
                    }
                };
                $scope.range = function () {
                    if (!$scope.pagesCount) { return []; }
                    var step = 2;
                    var doubleStep = step * 2;
                    var start = Math.max(0, $scope.page - step);
                    var end = start + 1 + doubleStep;
                    if (end > $scope.pagesCount) { end = $scope.pagesCount; }

                    var ret = [];
                    for (var i = start; i != end; ++i) {
                        ret.push(i);
                    }

                    return ret;
                };
            }]
        }
    });
</script>
}
